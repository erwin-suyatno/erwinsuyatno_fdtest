version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: erwinsuyatno_fdtest_postgres
    environment:
      POSTGRES_DB: erwinsuyatno_fdtest
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./erwinsuyatno_fdtest_schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: erwinsuyatno_fdtest_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API - Local Development
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend-erwinsuyatno-fdtest-dev
    container_name: erwinsuyatno_fdtest_backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/erwinsuyatno_fdtest
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 1d
      PORT: 4000
      FRONTEND_URL: http://localhost:3000
      APP_BASE_URL: http://localhost:4000
      # SMTP Configuration (update with your email settings)
      # Option 1: Gmail SMTP (for development)
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
      MAIL_FROM: noreply@yourdomain.com
      
      # Option 2: SendGrid (for production)
      # SMTP_HOST: smtp.sendgrid.net
      # SMTP_PORT: 587
      # SMTP_USER: apikey
      # SMTP_PASS: your-sendgrid-api-key
      
      # Option 3: Mailgun
      # SMTP_HOST: smtp.mailgun.org
      # SMTP_PORT: 587
      # SMTP_USER: your-mailgun-smtp-username
      # SMTP_PASS: your-mailgun-smtp-password
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Application - Local Development
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend-erwinsuyatno-fdtest-dev
    container_name: erwinsuyatno_fdtest_frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:4000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      - /app/out
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: erwinsuyatno_fdtest_network
    driver: bridge
